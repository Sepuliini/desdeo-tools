name: automate-DESDEO-tools

on:
  pull_request:
    branches:
      - master
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip

  test:
    strategy:
      fail-fast: false  # Allow retries
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.8", "3.9" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
        
      - name: Install library
        run: poetry install --no-interaction

      - name: Run tests
        id: run-tests
        run: |
          source .venv/bin/activate
          retries=3
          for i in $(seq 1 $retries); do
            pytest tests/
            if [ $? -eq 0 ]; then
              break
            fi
            echo "Retrying failed tests... (Attempt $i)"
          done
      
  automerge:
    name: Auto merge after successful checks
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Auto merge
        uses: pascalgn/automerge-action@135f0bdb927d9807b5446f7ca9ecc2c51de03c4a
        if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_ACTIONS_TOKEN }}
          LOG: "TRACE"  # or "DEBUG"
          MERGE_LABELS: ""
          MERGE_METHOD: rebase
